{"version":3,"sources":["pages/components/post.js","pages/components/newsletter.js","pages/components/svg/labsvg.js","pages/components/experiment.js","pages/components/experiments.js","pages/home.js","serviceWorker.js","index.js","App.js"],"names":["Post","data","this","props","undefined","react_default","a","createElement","className","alt","src","target","href","url","name","Label_default","color","text","description","Component","NewsLetter","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","repos","_this2","fetch","then","res","json","setState","Card_default","key","image","renderPosts","count","arguments","length","blackList","filter","e","includes","slice","map","post_Post","id","html_url","substr","LabSVG","height","concat","viewBox","width","xmlns","d","fill","Experiment","css","backgroundImage","backgroundColor","fontColor","style","dateTime","date","Experiments","labsvg_LabSVG","renderExperiments","config","experiments","experiment_Experiment","Home","Button_default","animated","newsletter_NewsLetter","experiments_Experiments","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","BrowserRouter","Switch","Route","path","component","exact","document","querySelector","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0a6e9741.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport MalexLabel from 'malextrap-react/lib/Label';\n\nexport default class Post extends Component {\n\n\n    /** SUPER **/\n\n    render(){\n        const data = this.props.data;\n        if (data === undefined) return;\n        return (\n            <div className={\"post\"}>\n                <img alt={\"avatar\"} className={\"avatar\"} src={\"https://avatars3.githubusercontent.com/u/20615143?v=3&s=460\"} />\n                <div className={\"content\"}>\n                    <a target={\"_blank\"} href={data.url} className={\"header no-decoration\"}>\n                        {data.name} <br /><MalexLabel color={\"pink\"} text={\"REPO\"} />\n                    </a>\n                    <div className={\"description\"}>\n                        {data.description}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport MalexCard from 'malextrap-react/lib/Card';\nimport Post from './post';\n\n\nexport default class NewsLetter extends Component {\n\n\n    /** SMALL CONSTRUCTORS **/\n\n    constructor(props){\n        super(props);\n        this.state = {\n            repos: []\n        };\n    }\n\n\n    /** SUPER **/\n\n    componentDidMount(){\n        fetch(\"https://api.github.com/users/clonalejandro/repos?sort='created'\")\n            .then(res => res.json())\n            .then(json => this.setState({repos: json}))\n    }\n\n\n    render(){\n        return ([\n            <div className={\"container\"}>\n                <div className={\"columns\"}>\n                    <MalexCard\n                        color={\"col-md-4\"}\n                        text={[\n                            <span className={\"icons-user\"}> About me</span>,\n                            [\n                                \"Hi my name is Alex or Alejandro. Also known as clonalejandro.\",\n                                <br key={\"first-separator-aboutme\"} />,\n                                \"I'm a FullStack Developer and Hacking Lover.\",\n                                <br key={\"second-separator-aboutme\"} />,\n                                \"Expert in programming languages and frameworks likes React, Node, Kotlin, JavaScript, PHP and Java.\", \n                                <br key={\"third-separator-aboutme\"} />,\n                                \"Although I'm Spanish, this is an explanation about my low level in English.\",\n                            ]\n                        ]}\n                        image={\"url(https://i.imgur.com/n2VsnJb.jpg)\"}\n                        href={\"https://github.com/clonalejandro\"}\n                    />\n                    <div className=\"col-md-4 posts\">\n                        <h3 className=\"titler\"><i className=\"icons-pencil\"/> Latest Posts:</h3>\n                        <div className={\"posts-container\"}>\n                            {this.renderPosts(4)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ])\n    }\n\n\n    /** REST **/\n\n    /**\n     * This function render the posts\n     * @param {Number} count count of the repos as you want to get\n     * @param {Array} blackList\n     * @return {Post} post\n     */\n    renderPosts(count = 6, blackList = [\"clonalejandro.github.io\"]){\n        return this.state.repos.filter(e => !blackList.includes(e.name))\n            .slice(0, count)\n            .map(e => \n                <Post key={e.id} data={{\n                    url: e.html_url,\n                    name: e.name.length > 16 ? e.name.substr(0, 16) + \"..\" : e.name,\n                    description: e.description\n                }} />\n        )\n    }\n}","import React, {Component} from 'react';\n\n\nexport default class LabSVG extends Component {\n\n\n    /** SUPER **/\n\n    render(){\n        const props = this.props;\n        return <svg height={`${props.height}pt`} viewBox=\"-88 0 512 512\" width={`${props.width}pt`} xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m221.789062 82.484375c0 22.199219-18 40.199219-40.199218 40.199219-22.199219 0-40.199219-18-40.199219-40.199219s18-40.199219 40.199219-40.199219c22.199218 0 40.199218 18 40.199218 40.199219zm0 0\" fill=\"#b18cd9\"/><path d=\"m283.566406 23.363281c0 12.902344-10.457031 23.363281-23.363281 23.363281-12.902344 0-23.363281-10.460937-23.363281-23.363281 0-12.902343 10.460937-23.363281 23.363281-23.363281 12.90625 0 23.363281 10.460938 23.363281 23.363281zm0 0\" fill=\"#996acc\"/><path d=\"m228.683594 223.410156v-86.507812h-122.113282v86.507812c0 40.542969-12.011718 80.175782-34.519531 113.894532l-63.328125 94.875c-22.765625 34.105468 1.683594 79.820312 42.6875 79.820312h232.433594c41.007812 0 65.453125-45.714844 42.6875-79.820312l-63.328125-94.875c-22.507813-33.71875-34.519531-73.351563-34.519531-113.894532zm0 0\" fill=\"#91d4f2\"/><path d=\"m228.683594 185.59375v-48.691406h-122.113282v83.304687c14.984376-6.285156 37.464844-14.027343 61.058594-16.050781 21.960938-1.882812 44.617188-10.699219 61.054688-18.5625zm0 0\" fill=\"#59c2e8\"/><path d=\"m227.441406 156.957031h-119.628906c-18.929688 0-34.273438-15.34375-34.273438-34.273437 0-18.929688 15.34375-34.277344 34.273438-34.277344h119.628906c18.929688 0 34.277344 15.347656 34.277344 34.277344-.003906 18.929687-15.347656 34.273437-34.277344 34.273437zm0 0\" fill=\"#c2eafb\"/><path d=\"m129.484375 122.683594c0-18.929688 15.34375-34.277344 34.273437-34.277344h-55.945312c-18.929688 0-34.273438 15.347656-34.273438 34.277344 0 18.925781 15.34375 34.273437 34.273438 34.273437h55.945312c-18.929687 0-34.273437-15.34375-34.273437-34.273437zm0 0\" fill=\"#91d4f2\"/><path d=\"m261.398438 334.558594-196.8125 13.933594-20.238282 30.320312-35.625 53.367188c-22.765625 34.105468 1.683594 79.820312 42.6875 79.820312h232.433594c41.007812 0 65.453125-45.714844 42.6875-79.820312zm0 0\" fill=\"#996acc\"/><path d=\"m64.585938 348.492188c17.464843 33.730468 59.972656 53.339843 196.8125-13.9375 0 0-43.199219 4.292968-98.703126-12.734376-68.0625-20.875-98.109374 26.671876-98.109374 26.671876zm0 0\" fill=\"#b18cd9\"/><g fill=\"#454545\"><path d=\"m231.300781 436.5625c-4.269531 0-7.726562-3.460938-7.726562-7.726562v-12.828126c0-4.265624 3.457031-7.726562 7.726562-7.726562 4.265625 0 7.722657 3.460938 7.722657 7.726562v12.828126c0 4.265624-3.457032 7.726562-7.722657 7.726562zm0 0\"/><path d=\"m103.957031 436.5625c-4.269531 0-7.726562-3.460938-7.726562-7.726562v-12.828126c0-4.265624 3.457031-7.726562 7.726562-7.726562 4.265625 0 7.726563 3.460938 7.726563 7.726562v12.828126c0 4.265624-3.460938 7.726562-7.726563 7.726562zm0 0\"/><path d=\"m183.117188 431.457031c0-10.898437-6.933594-19.734375-15.488282-19.734375-8.554687 0-15.488281 8.835938-15.488281 19.734375 0 10.898438 6.933594 19.730469 15.488281 19.730469 8.554688 0 15.488282-8.832031 15.488282-19.730469zm0 0\"/></g></svg>\n    }\n}","import React, {Component} from 'react';\n\n\nexport default class Experiment extends Component {\n\n\n    /** SUPER **/\n\n    render(){\n        const css = {\n            image: {\n                backgroundImage: `url('${this.props.image}')`\n            },\n            color: {\n                backgroundColor: this.props.backgroundColor,\n                color: this.props.fontColor\n            }\n        };\n\n        return (\n            <div className={\"experiment col-md-6 col-lg-4\"}>\n                <a className={\"experiment-img\"} href={this.props.href} style={css.image} />\n                <div className=\"experiment-info\" style={css.color}>\n                    <a className={\"no-decoration\"} href={this.props.href}>{this.props.name}</a>\n                    <time className={\"experiment-date\"} dateTime={this.props.date}>{this.props.date}</time>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport LabSVG from './svg/labsvg';\nimport Experiment from './experiment';\nimport config from '../../config/config.json';\n\n\nexport default class Experiments extends Component {\n\n\n    /** SUPER **/\n\n    render(){\n        return (\n            <div className={\"experiments container\"}>\n                <div className={\"experiments-title\"}>\n                    <h3 className={\"exp-title\"}><LabSVG width={32} height={32} /> Last experiments</h3>\n                    <p className={\"exp-subtitle\"}>Quality is more important than quantity. — S. Jobs</p>\n                </div>,\n                <div className={\"columns\"}>\n                    {this.renderExperiments()}\n                </div>\n            </div>\n        )\n    }\n\n\n    /** REST **/\n\n    /**\n     * This function render all experiments from config\n     * @return {Experiment} experiment\n     */\n    renderExperiments(){\n        return config.experiments.map(e => \n            <Experiment \n                name={e.name}\n                date={e.date}\n                href={e.href}\n                image={e.image}\n                backgroundColor={e.backgroundColor}\n                fontColor={e.fontColor}\n            />\n        )\n    }\n}","import React, {Component} from 'react';\n\nimport MalexButton from 'malextrap-react/lib/Button';\n\nimport NewsLetter from './components/newsletter';\nimport Experiments from './components/experiments';\n\nimport \"malextrap-react/src/framework.css\";\nimport \"../styles/home.css\";\n\n\nexport default class Home extends Component {\n\n\n    /** SUPER **/\n\n    render(){\n        return ([\n            <header className={\"header\"}>\n                <div className={\"background\"}></div>\n                <div className={\"bgfilter\"}></div>\n                    <div key={\"title-home\"} className={\"title\"}>\n                        <img alt={\"logo\"} src={\"https://avatars3.githubusercontent.com/u/20615143?v=3&s=460\"} />\n                        <h1 className={\"headline\"}>clonalejandro</h1>\n                        <h2 className={\"subtitle\"}>FullStack Developer</h2>\n                        <MalexButton animated color={\"first-gradient\"} text={\"Laboratory\"} />\n                    </div>\n                \n            </header>,\n            <div id={\"main\"} key={\"main-home\"}>\n                <NewsLetter />\n                <hr />\n                <Experiments />\n            </div>\n        ])\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#wrapper'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Home from './pages/home';\n\n\n/** REST **/\n\nexport default () => \n    <BrowserRouter>\n        <Switch>\n            <Route path={\"/\"} component={Home} exact />\n        </Switch>\n    </BrowserRouter>"],"sourceRoot":""}