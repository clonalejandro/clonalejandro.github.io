{"version":3,"sources":["redux/store.js","components/header/index.js","redux/actions/repos.js","components/post/index.js","components/newsletter/index.js","hooks/usePosts.js","components/logoLab/index.js","components/experiment/index.js","components/experiments/index.js","hooks/usePagination.js","redux/actions/page.js","hooks/useExperiments.js","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","repos","page","createStore","state","arguments","length","undefined","action","type","Object","objectSpread2","applyMiddleware","thunk","styled","header","_templateObject","taggedTemplateLiteral","Div","div","post_templateObject","Post","props","react_default","a","createElement","alt","className","src","loading","target","href","url","rel","name","Label_default","color","text","description","Posts","newsletter_templateObject","NewsLetter","dispatch","useDispatch","useSelector","useEffect","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","fetch","sent","json","stop","_x","apply","this","Card_default","key","image","callback","count","blackList","Array","filter","e","includes","slice","map","usePosts","post","id","html_url","substr","LogoLab","height","concat","viewBox","width","xmlns","d","fill","Image","experiment_templateObject","ExpInfo","_templateObject2","backgroundColor","fontColor","_templateObject3","Experiment","experiment_Div","assign","dateTime","date","paginatedExperiments","array","pages","arr","toConsumableArray","paginated","push","splice","usePagination","experiments","ExperimentsContainer","experiments_templateObject","connect","store","setPage","_paginatedExperiments","logoLab","_","index","reduce","acc","val","experiment","sort","exp1","exp2","Date","getTime","reverse","Button_default","animated","onClick","Main","home_templateObject","Hr","hr","home_templateObject2","home","newsletter","App","react_router_dom","react_router","path","component","Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qzCAGMA,EAAe,CACjBC,MAAO,GACPC,KAAM,GAoBKC,cAjBC,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBL,EAAcQ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQC,EAAOC,MACX,IAAK,WACD,OAAOC,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEIF,KAAMM,EAAON,OAErB,IAAK,YACD,OAAOQ,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAN,GADP,IAEIH,MAAOO,EAAOP,QAEtB,QACI,OAAOG,IAIiBQ,YAAgBC,oDCvBrCC,MAAOC,OAAtBC,MAAAN,OAAAO,EAAA,EAAAP,CAAA,ohOCFO,qCCIDQ,EAAMJ,IAAOK,IAAVC,MAAAV,OAAAO,EAAA,EAAAP,CAAA,i7BAyDMW,EAfF,SAAAC,GAAK,OACdA,GACIC,EAAAC,EAAAC,cAACP,EAAD,KACIK,EAAAC,EAAAC,cAAA,OAAKC,IAAI,SAASC,UAAU,SAASC,IAAI,8DAA8DC,QAAQ,SAC/GN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,KAAGK,OAAO,SAASC,KAAMT,EAAMU,IAAKL,UAAU,uBAAuBM,IAAI,uBACpEX,EAAMY,KACPX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYY,MAAM,OAAOC,KAAK,UAElCd,EAAAC,EAAAC,cAAA,OAAKE,UAAW,eAAgBL,EAAMgB,gBChDhDC,EAAQzB,IAAOK,IAAVqB,MAAA9B,OAAAO,EAAA,EAAAP,CAAA,iMAiEI+B,EAtDI,WACf,IAAMC,EAAWC,cACT1C,EAAU2C,YAAY,SAAAxC,GAAK,OAAIA,IAA/BH,MAMR,OAJA4C,oBAAU,WACNH,EFtBgB,eAAAI,EAAApC,OAAAqC,EAAA,EAAArC,CAAAsC,IAAAC,KAAM,SAAAC,EAAMR,GAAN,IAAAS,EAAAlD,EAAA,OAAA+C,IAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRC,MAAM,mEADE,cACpBL,EADoBE,EAAAI,KAAAJ,EAAAE,KAAA,EAENJ,EAAIO,OAFE,OAEpBzD,EAFoBoD,EAAAI,KAG1Bf,EAAS,CACLjC,KANiB,YAOjBR,UALsB,wBAAAoD,EAAAM,SAAAT,MAAN,gBAAAU,GAAA,OAAAd,EAAAe,MAAAC,KAAAzD,YAAA,KEuBjB,CAACqC,IAGAnB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,CACIY,MAAM,gDACNC,KAAM,CACFd,EAAAC,EAAAC,cAAA,QAAMuC,IAAI,kBAAkBrC,UAAU,cACjC,YAEL,CACI,gEACAJ,EAAAC,EAAAC,cAAA,MAAIuC,IAAI,4BACR,+CACAzC,EAAAC,EAAAC,cAAA,MAAIuC,IAAI,6BACR,sGACAzC,EAAAC,EAAAC,cAAA,MAAIuC,IAAI,4BACR,gFAGRC,MAAM,uCACNlC,KAAK,qCAETR,EAAAC,EAAAC,cAACc,EAAD,CAAOZ,UAAU,YACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,UACVJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBADjB,IACoC,iBAEpCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBCrDpB,SAAC1B,EAAOiE,GAAR,IAAkBC,EAAlB9D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA0B,EAAG+D,EAA7B/D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAyC,CAAC,0BAA2B,gBAAiB,yBAAtF,OACVJ,aAAiBoE,MAAQpE,EAAQ,IAC7BqE,OAAO,SAAAC,GAAC,OAAKH,EAAUI,SAASD,EAAErC,QAClCuC,MAAM,EAAGN,GACTO,IAAIR,GDkDYS,CACG1E,EACA,SAAAsE,GAAC,OACGhD,EAAAC,EAAAC,cAACmD,EAAD,CACIZ,IAAKO,EAAEM,GACP7C,IAAKuC,EAAEO,SACP5C,KAAMqC,EAAErC,KAAK5B,OAAS,GAAKiE,EAAErC,KAAK6C,OAAO,EAAG,IAAM,KAAOR,EAAErC,KAC3DI,YAAaiC,EAAEjC,eAGvB,gBEfb0C,EA/CC,SAAA1D,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OACIwD,OAAM,GAAAC,OAAK5D,EAAM2D,OAAX,MACNE,QAAQ,gBACRC,MAAK,GAAAF,OAAK5D,EAAM8D,MAAX,MACLC,MAAM,8BAEN9D,EAAAC,EAAAC,cAAA,QACI6D,EAAE,qMACFC,KAAK,YAEThE,EAAAC,EAAAC,cAAA,QACI6D,EAAE,4OACFC,KAAK,YAEThE,EAAAC,EAAAC,cAAA,QACI6D,EAAE,4UACFC,KAAK,YAEThE,EAAAC,EAAAC,cAAA,QACI6D,EAAE,kLACFC,KAAK,YAEThE,EAAAC,EAAAC,cAAA,QACI6D,EAAE,0QACFC,KAAK,YAEThE,EAAAC,EAAAC,cAAA,QACI6D,EAAE,kQACFC,KAAK,YAEThE,EAAAC,EAAAC,cAAA,QACI6D,EAAE,6MACFC,KAAK,YAEThE,EAAAC,EAAAC,cAAA,QACI6D,EAAE,wLACFC,KAAK,YAEThE,EAAAC,EAAAC,cAAA,KAAG8D,KAAK,WACJhE,EAAAC,EAAAC,cAAA,QAAM6D,EAAE,gPACR/D,EAAAC,EAAAC,cAAA,QAAM6D,EAAE,gPACR/D,EAAAC,EAAAC,cAAA,QAAM6D,EAAE,6OCzCdE,EAAQ1E,IAAOU,EAAViE,MAAA/E,OAAAO,EAAA,EAAAP,CAAA,yCACgB,SAAAY,GAAK,OAAIA,EAAM2C,QAEpCyB,EAAU5E,IAAOK,IAAVwE,MAAAjF,OAAAO,EAAA,EAAAP,CAAA,sDACW,SAAAY,GAAK,OAAIA,EAAMsE,iBAC1B,SAAAtE,GAAK,OAAIA,EAAMuE,YAEtB3E,EAAMJ,IAAOK,IAAV2E,MAAApF,OAAAO,EAAA,EAAAP,CAAA,smBA6CMqF,EAdI,SAAAzE,GAAK,OACpBC,EAAAC,EAAAC,cAACuE,EAAD,CAAKrE,UAAU,oCACXJ,EAAAC,EAAAC,cAAC+D,EAAD9E,OAAAuF,OAAA,CAAOtE,UAAU,iBAAiBI,KAAMT,EAAMS,MAAUT,IACxDC,EAAAC,EAAAC,cAACiE,EAADhF,OAAAuF,OAAA,CAAStE,UAAU,mBAAsBL,GACrCC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgBI,KAAMT,EAAMS,MACpCT,EAAMY,MAEXX,EAAAC,EAAAC,cAAA,QAAME,UAAU,kBAAkBuE,SAAU5E,EAAM6E,MAC7C7E,EAAM6E,iBCrCjBC,ECZS,SAACC,EAAOC,GAInB,IAHA,IAAMC,EAAG7F,OAAA8F,EAAA,EAAA9F,CAAO2F,GACVI,EAAY,GAEXF,EAAIjG,QAAQmG,EAAUC,KAAKH,EAAII,OAAO,EAAGL,IAChD,OAAOG,EDOkBG,CAAcC,IADhB,GAGrBC,EAAuBhG,IAAOK,IAAV4F,MAAArG,OAAAO,EAAA,EAAAP,CAAA,6UAiDXsG,cACX,SAAAC,GAAK,MAAK,CACN/G,KAAM+G,EAAM/G,OAEhB,CACIgH,QElEe,SAAAhH,GAAI,MAAK,CAC5BO,KAHoB,WAIpBP,UF2DW8G,CAhCK,SAAAlE,GAAA,IAAAqE,EG/BJN,EAAa3C,EH+BNhE,EAAH4C,EAAG5C,KAAMgH,EAATpE,EAASoE,QAAT,OAChB3F,EAAAC,EAAAC,cAACqF,EAAD,CAAsBnF,UAAU,aAC5BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAC2F,EAAD,CAAMhC,MAAO,GAAIH,OAAQ,KAD7B,qBAGA1D,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAb,4DAEJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YGvCPkF,EHyCAT,EAAqB9B,OAAO,SAAC+C,EAAGC,GAAJ,OAAcA,GAASpH,IAAMqH,OAAO,SAACC,EAAKC,GAAN,OAAcD,EAAItC,OAAOuC,IAAM,IGzClFvD,EH0Cb,SAAAK,GAAC,OACGhD,EAAAC,EAAAC,cAACiG,EAAD,CACI1D,IAAKO,EAAErC,KACPA,KAAMqC,EAAErC,KACRiE,KAAM5B,EAAE4B,KACRpE,KAAMwC,EAAExC,KACRkC,MAAOM,EAAEN,MACT2B,gBAAiBrB,EAAEqB,gBACnBC,UAAWtB,EAAEsB,aGjDjCgB,EACKnC,IAAIR,GACJyD,KAAK,SAACC,EAAMC,GAAP,OAAgB,IAAIC,KAAKF,EAAKtG,MAAM6E,MAAM4B,UAAY,IAAID,KAAKD,EAAKvG,MAAM6E,MAAM4B,YACrFC,YHmDAnB,IAAYvG,OA5CM,IA4ClB,QAAA6G,EAA2Cf,EAAqBlG,EAAO,UAAvE,IAAAiH,OAAA,EAA2CA,EAAgC7G,SACxEiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,CAAaa,KAAK,oBAAU6F,UAAQ,EAAC9F,MAAM,QAAQ+F,QAAS,kBAAMjB,EAAQhH,EAAO,UIhD3FkI,eAAOtH,IAAOK,IAAVkH,MAAA3H,OAAAO,EAAA,EAAAP,CAAA,yIAOJ4H,EAAKxH,IAAOyH,GAAVC,MAAA9H,OAAAO,EAAA,EAAAP,CAAA,oHAQO+H,EAAA,WACX,MAAO,CACHlH,EAAAC,EAAAC,cAACV,EAAD,CAAQiD,IAAI,eACRzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWkD,GAAG,cAC7BtD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,OAAKC,IAAI,OAAOE,IAAI,kCAAkCC,QAAQ,SAC9DN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,iBACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,uBACAJ,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,CAAa0G,UAAQ,EAAC9F,MAAM,iBAAiBC,KAAK,iBAG1Dd,EAAAC,EAAAC,cAAC2G,EAAD,CAAMpE,IAAI,aACNzC,EAAAC,EAAAC,cAACiH,EAAD,MACAnH,EAAAC,EAAAC,cAAC6G,EAAD,MACA/G,EAAAC,EAAAC,cAACoF,EAAD,SC3BG8B,EARH,kBACRpH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,KACIrH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,KACItH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWC,OCKjCC,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCvC,SAASC,GAAgBC,EAAOC,GAC5BC,UAAUC,cACLC,SAASJ,GACTK,KAAK,SAAAC,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiB5J,QACbsJ,UAAUC,cAAcQ,YAIxBC,QAAQC,IACJ,iHAKAZ,GAAUA,EAAOa,UACjBb,EAAOa,SAASR,KAMpBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACjBd,EAAOc,UAAUT,UAOxCU,MAAM,SAAAC,GACHL,QAAQK,MAAM,4CAA6CA,KCvFvEC,IAASC,OACLpJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAU3D,MAAOA,GACb1F,EAAAC,EAAAC,cAACoJ,EAAD,OAEJC,SAASC,eAAe,YDSrB,SAAkBtB,GACrB,GAA6C,kBAAmBC,UAAW,CAGvE,GADkB,IAAIsB,IAAIC,GAAwB9B,OAAOC,SAASrH,MACpDmJ,SAAW/B,OAAOC,SAAS8B,OAIrC,OAGJ/B,OAAOgC,iBAAiB,OAAQ,WAC5B,IAAM3B,EAAK,GAAAtE,OAAM+F,GAAN,sBAEPhC,GAgEhB,SAAiCO,EAAOC,GAEpCjG,MAAMgG,GACDK,KAAK,SAAAuB,GAEF,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBACjB,MAApBH,EAASI,QAAkC,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAEvE/B,UAAUC,cAAc+B,MAAM7B,KAAK,SAAAC,GAC/BA,EAAa6B,aAAa9B,KAAK,WAC3BV,OAAOC,SAASwC,aAKxBrC,GAAgBC,EAAOC,KAG9Be,MAAM,WACHJ,QAAQC,IAAI,mEAjFRwB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,KAAK,WAC/BO,QAAQC,IACJ,gHAMRd,GAAgBC,EAAOC,MC/BvCE","file":"static/js/main.b77012b0.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst initialState = {\r\n    repos: [],\r\n    page: 0,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.page,\r\n            }\r\n        case 'SET_REPOS':\r\n            return {\r\n                ...state,\r\n                repos: action.repos,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default createStore(reducer, applyMiddleware(thunk))\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.header`\r\n  overflow: hidden;\r\n\r\n  & .background {\r\n    background-position: 50% 50%;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    height: 100%;\r\n    background-image: linear-gradient(-20deg, #2b5876 0%, #4e4376 100%);\r\n    position: fixed;\r\n    z-index: -1;\r\n    width: 100%\r\n  }\r\n\r\n  & .bgfilter {\r\n    position: fixed;\r\n    z-index: -1;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: rgba(0, 0, 0, .4)\r\n  }\r\n\r\n  .title .headline {\r\n    color: white;\r\n    font-weight: 600\r\n  }\r\n\r\n  & div.title h2.subtitle {\r\n    color: white;\r\n    font-weight: 300;\r\n    font-size: 1.3em\r\n  }\r\n\r\n\r\n  & div.title img {\r\n    border-radius: 10%;\r\n    width: 15%;\r\n    height: 15%\r\n  }\r\n`","export const SET_REPOS = 'SET_REPOS'\r\n\r\nexport const setRepos = () => async dispatch => {\r\n    const res = await fetch('https://api.github.com/users/clonalejandro/repos?sort=\"created\"')\r\n    const repos = await res.json()\r\n    dispatch({\r\n        type: SET_REPOS,\r\n        repos,\r\n    })\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MalexLabel from 'malextrap-react/lib/Label'\r\n\r\nconst Div = styled.div`\r\n    margin-bottom: 2%;\r\n    font-size: 0.8em;\r\n\r\n    & div.content {\r\n        width: 80%;\r\n        display: inline-block;\r\n        padding: 0 0 0 0.5em;\r\n        vertical-align: top;\r\n        line-height: 1.14285714em;\r\n        font-size: 1em;\r\n    }\r\n\r\n    & div.content .description {\r\n        word-break: break-word;\r\n    }\r\n\r\n    &:not(:last-child) {\r\n        padding-top: 0;\r\n        padding-bottom: 0.85714286em;\r\n        display: list-item;\r\n        table-layout: fixed;\r\n        list-style-type: none;\r\n        list-style-position: outside;\r\n        padding: 0.21428571em 0;\r\n        line-height: 1.14285714em;\r\n    }\r\n\r\n    & .header {\r\n        display: flex;\r\n        margin: 0;\r\n        font-weight: 700;\r\n        color: #4183c4 !important;\r\n        line-height: 1.14285714em;\r\n        font-family: Lato, 'Helvetica Neue', Arial, Helvetica, sans-serif;\r\n    }\r\n\r\n    & .header .label {\r\n        margin: auto 0 0 1%;\r\n    }\r\n`\r\n\r\nconst Post = props =>\r\n    props && (\r\n        <Div>\r\n            <img alt=\"avatar\" className=\"avatar\" src=\"https://avatars3.githubusercontent.com/u/20615143?v=3&s=460\" loading=\"lazy\" />\r\n            <div className=\"content\">\r\n                <a target=\"_blank\" href={props.url} className=\"header no-decoration\" rel=\"noopener noreferrer\">\r\n                    {props.name}\r\n                    <br />\r\n                    <MalexLabel color=\"pink\" text=\"REPO\" />\r\n                </a>\r\n                <div className={'description'}>{props.description}</div>\r\n            </div>\r\n        </Div>\r\n    )\r\n\r\nexport default Post\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport MalexCard from 'malextrap-react/lib/Card'\r\nimport { setRepos } from '../../redux/actions/'\r\nimport usePosts from '../../hooks/usePosts'\r\nimport Post from '../post'\r\n\r\nconst Posts = styled.div`\r\n    margin: 40px 0 40px 5%;\r\n    & img.avatar {\r\n        display: inline-block;\r\n        margin: 0;\r\n        width: 2em;\r\n        height: 2em;\r\n        border-radius: 500rem;\r\n    }\r\n`\r\n\r\nconst NewsLetter = () => {\r\n    const dispatch = useDispatch()\r\n    const { repos } = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        dispatch(setRepos())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"columns\">\r\n                <MalexCard\r\n                    color=\"col-md-4 desc-card animated bounceIn delay-2s\"\r\n                    text={[\r\n                        <span key=\"span-icon-about\" className=\"icons-user\">\r\n                            {'About me'}\r\n                        </span>,\r\n                        [\r\n                            'Hi my name is Alex or Alejandro. Also known as clonalejandro.',\r\n                            <br key=\"first-separator-aboutme\" />,\r\n                            'I\\'m a FullStack Developer and Hacking Lover.',\r\n                            <br key=\"second-separator-aboutme\" />,\r\n                            'Expert in programming languages and frameworks likes React, Node, Kotlin, JavaScript, PHP and Java.',\r\n                            <br key=\"third-separator-aboutme\" />,\r\n                            'Although I\\'m Spanish, this is an explanation about my low level in English.',\r\n                        ],\r\n                    ]}\r\n                    image=\"url(https://i.imgur.com/yortBfc.jpg)\"\r\n                    href=\"https://github.com/clonalejandro\"\r\n                />\r\n                <Posts className=\"col-md-4\">\r\n                    <h3 className=\"titler\">\r\n                        <i className=\"icons-pencil\" /> {'Latest Posts:'}\r\n                    </h3>\r\n                    <div className=\"posts-container\">\r\n                        {usePosts(\r\n                            repos,\r\n                            e => (\r\n                                <Post\r\n                                    key={e.id}\r\n                                    url={e.html_url}\r\n                                    name={e.name.length > 16 ? e.name.substr(0, 16) + '..' : e.name}\r\n                                    description={e.description}\r\n                                />\r\n                            ),\r\n                            4,\r\n                        )}\r\n                    </div>\r\n                </Posts>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsLetter\r\n","export default (repos, callback, count = 6, blackList = ['clonalejandro.github.io', 'clonalejandro', 'GitHubGraduation-2022']) =>\r\n    (repos instanceof Array ? repos : [])\r\n        .filter(e => !blackList.includes(e.name))\r\n        .slice(0, count)\r\n        .map(callback)\r\n","import React from 'react'\r\n\r\nconst LogoLab = props => (\r\n    <svg\r\n        height={`${props.height}pt`}\r\n        viewBox=\"-88 0 512 512\"\r\n        width={`${props.width}pt`}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <path\r\n            d=\"m221.789062 82.484375c0 22.199219-18 40.199219-40.199218 40.199219-22.199219 0-40.199219-18-40.199219-40.199219s18-40.199219 40.199219-40.199219c22.199218 0 40.199218 18 40.199218 40.199219zm0 0\"\r\n            fill=\"#b18cd9\"\r\n        />\r\n        <path\r\n            d=\"m283.566406 23.363281c0 12.902344-10.457031 23.363281-23.363281 23.363281-12.902344 0-23.363281-10.460937-23.363281-23.363281 0-12.902343 10.460937-23.363281 23.363281-23.363281 12.90625 0 23.363281 10.460938 23.363281 23.363281zm0 0\"\r\n            fill=\"#996acc\"\r\n        />\r\n        <path\r\n            d=\"m228.683594 223.410156v-86.507812h-122.113282v86.507812c0 40.542969-12.011718 80.175782-34.519531 113.894532l-63.328125 94.875c-22.765625 34.105468 1.683594 79.820312 42.6875 79.820312h232.433594c41.007812 0 65.453125-45.714844 42.6875-79.820312l-63.328125-94.875c-22.507813-33.71875-34.519531-73.351563-34.519531-113.894532zm0 0\"\r\n            fill=\"#91d4f2\"\r\n        />\r\n        <path\r\n            d=\"m228.683594 185.59375v-48.691406h-122.113282v83.304687c14.984376-6.285156 37.464844-14.027343 61.058594-16.050781 21.960938-1.882812 44.617188-10.699219 61.054688-18.5625zm0 0\"\r\n            fill=\"#59c2e8\"\r\n        />\r\n        <path\r\n            d=\"m227.441406 156.957031h-119.628906c-18.929688 0-34.273438-15.34375-34.273438-34.273437 0-18.929688 15.34375-34.277344 34.273438-34.277344h119.628906c18.929688 0 34.277344 15.347656 34.277344 34.277344-.003906 18.929687-15.347656 34.273437-34.277344 34.273437zm0 0\"\r\n            fill=\"#c2eafb\"\r\n        />\r\n        <path\r\n            d=\"m129.484375 122.683594c0-18.929688 15.34375-34.277344 34.273437-34.277344h-55.945312c-18.929688 0-34.273438 15.347656-34.273438 34.277344 0 18.925781 15.34375 34.273437 34.273438 34.273437h55.945312c-18.929687 0-34.273437-15.34375-34.273437-34.273437zm0 0\"\r\n            fill=\"#91d4f2\"\r\n        />\r\n        <path\r\n            d=\"m261.398438 334.558594-196.8125 13.933594-20.238282 30.320312-35.625 53.367188c-22.765625 34.105468 1.683594 79.820312 42.6875 79.820312h232.433594c41.007812 0 65.453125-45.714844 42.6875-79.820312zm0 0\"\r\n            fill=\"#996acc\"\r\n        />\r\n        <path\r\n            d=\"m64.585938 348.492188c17.464843 33.730468 59.972656 53.339843 196.8125-13.9375 0 0-43.199219 4.292968-98.703126-12.734376-68.0625-20.875-98.109374 26.671876-98.109374 26.671876zm0 0\"\r\n            fill=\"#b18cd9\"\r\n        />\r\n        <g fill=\"#454545\">\r\n            <path d=\"m231.300781 436.5625c-4.269531 0-7.726562-3.460938-7.726562-7.726562v-12.828126c0-4.265624 3.457031-7.726562 7.726562-7.726562 4.265625 0 7.722657 3.460938 7.722657 7.726562v12.828126c0 4.265624-3.457032 7.726562-7.722657 7.726562zm0 0\" />\r\n            <path d=\"m103.957031 436.5625c-4.269531 0-7.726562-3.460938-7.726562-7.726562v-12.828126c0-4.265624 3.457031-7.726562 7.726562-7.726562 4.265625 0 7.726563 3.460938 7.726563 7.726562v12.828126c0 4.265624-3.460938 7.726562-7.726563 7.726562zm0 0\" />\r\n            <path d=\"m183.117188 431.457031c0-10.898437-6.933594-19.734375-15.488282-19.734375-8.554687 0-15.488281 8.835938-15.488281 19.734375 0 10.898438 6.933594 19.730469 15.488281 19.730469 8.554688 0 15.488282-8.832031 15.488282-19.730469zm0 0\" />\r\n        </g>\r\n    </svg>\r\n)\r\n\r\nexport default LogoLab\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Image = styled.a`\r\n  background-image: url('${props => props.image}')\r\n`\r\nconst ExpInfo = styled.div`\r\n    background-color: ${props => props.backgroundColor};\r\n    color: ${props => props.fontColor};\r\n`\r\nconst Div = styled.div`\r\n    text-align: center;\r\n    font-size: 0.8em;\r\n    margin-bottom: 2em;\r\n\r\n    & .experiment-img {\r\n        display: block;\r\n        height: 150px;\r\n        backface-visibility: hidden;\r\n        border-radius: 4px 4px 0 0;\r\n        background-size: cover;\r\n        transition: opacity 0.2s;\r\n    }\r\n\r\n    & .experiment-info {\r\n        padding: 1em;\r\n        border-radius: 0 0 4px 4px;\r\n        z-index: 3;\r\n    }\r\n\r\n    & .experiment-info a {\r\n        display: block;\r\n        font-weight: 700;\r\n        color: inherit;\r\n    }\r\n\r\n    & .experiment-info .experiment-date {\r\n        opacity: 0.6;\r\n    }\r\n`\r\n\r\nconst Experiment = props => (\r\n    <Div className=\"col-md-6 col-lg-4 animated pulse\">\r\n        <Image className=\"experiment-img\" href={props.href} {...props} />\r\n        <ExpInfo className=\"experiment-info\" {...props}>\r\n            <a className=\"no-decoration\" href={props.href}>\r\n                {props.name}\r\n            </a>\r\n            <time className=\"experiment-date\" dateTime={props.date}>\r\n                {props.date}\r\n            </time>\r\n        </ExpInfo>\r\n    </Div>\r\n)\r\n\r\nexport default Experiment\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport MalexButton from 'malextrap-react/lib/Button'\r\nimport useExperiments from '../../hooks/useExperiments'\r\nimport usePagination from '../../hooks/usePagination'\r\nimport Logo from '../logoLab'\r\nimport Experiment from '../experiment'\r\nimport { setPage } from '../../redux/actions/'\r\nimport { experiments } from '../../config.json'\r\n\r\nconst experimentsPerPage = 6\r\nconst paginatedExperiments = usePagination(experiments, experimentsPerPage)\r\n\r\nconst ExperimentsContainer = styled.div`\r\n    .experiments-title > .exp-title,\r\n    .experiments-title > .exp-subtitle {\r\n        text-align: center;\r\n    }\r\n\r\n    .experiments-title > .exp-title {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    .experiments-title > .exp-subtitle {\r\n        font-weight: 300;\r\n        margin-top: 0;\r\n        margin-bottom: 10px;\r\n    }\r\n`\r\n\r\nconst Experiments = ({ page, setPage }) => (\r\n    <ExperimentsContainer className=\"container\">\r\n        <div className=\"experiments-title\">\r\n            <h3 className=\"exp-title\">\r\n                <Logo width={32} height={32} /> Last experiments\r\n            </h3>\r\n            <p className=\"exp-subtitle\">Quality is more important than quantity. — S. Jobs</p>\r\n        </div>\r\n        <div className=\"columns\">\r\n            {useExperiments(\r\n                paginatedExperiments.filter((_, index) => index <= page).reduce((acc, val) => acc.concat(val), []),\r\n                e => (\r\n                    <Experiment\r\n                        key={e.name}\r\n                        name={e.name}\r\n                        date={e.date}\r\n                        href={e.href}\r\n                        image={e.image}\r\n                        backgroundColor={e.backgroundColor}\r\n                        fontColor={e.fontColor}\r\n                    />\r\n                ),\r\n            )}\r\n        </div>\r\n        {experiments.length > experimentsPerPage && paginatedExperiments[page + 1]?.length && (\r\n            <div>\r\n                <MalexButton text=\"More 🧪\" animated color=\"grape\" onClick={() => setPage(page + 1)} />\r\n            </div>\r\n        )}\r\n    </ExperimentsContainer>\r\n)\r\n\r\nexport default connect(\r\n    store => ({\r\n        page: store.page,\r\n    }),\r\n    {\r\n        setPage: setPage,\r\n    },\r\n)(Experiments)\r\n","export default (array, pages) => {\r\n    const arr = [...array]\r\n    const paginated = []\r\n\r\n    while (arr.length) paginated.push(arr.splice(0, pages))\r\n    return paginated\r\n}\r\n","export const SET_PAGE = 'SET_PAGE'\r\n\r\nexport const setPage = page => ({\r\n    type: SET_PAGE,\r\n    page,\r\n})","export default (experiments, callback) =>\r\n    experiments\r\n        .map(callback)\r\n        .sort((exp1, exp2) => new Date(exp1.props.date).getTime() - new Date(exp2.props.date).getTime())\r\n        .reverse()\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MalexButton from 'malextrap-react/lib/Button'\r\nimport Header from '../../components/header'\r\nimport NewsLetter from '../../components/newsletter'\r\nimport Experiments from '../../components/experiments'\r\nimport 'malextrap-react/src/framework.css'\r\nimport './style.css'\r\n\r\nconst Main = styled.div`\r\n    &,\r\n    &:before {\r\n        padding: 1.5em 0 1em;\r\n        background: linear-gradient(to bottom, #f4f4f4, #fff);\r\n    }\r\n`\r\nconst Hr = styled.hr`\r\n    border: 0;\r\n    height: 1px;\r\n    width: 25%;\r\n    margin: 2.5rem auto;\r\n    background-color: #ddd;\r\n`\r\n\r\nexport default () => {\r\n    return [\r\n        <Header key=\"home-header\">\r\n            <div className=\"background\"></div>\r\n            <div className=\"bgfilter\" id=\"particles\"></div>\r\n            <div className=\"title\">\r\n                <img alt=\"logo\" src=\"https://i.imgur.com/Qkc5j9C.png\" loading=\"lazy\" />\r\n                <h1 className=\"headline\">clonalejandro</h1>\r\n                <h2 className=\"subtitle\">FullStack Developer</h2>\r\n                <MalexButton animated color=\"first-gradient\" text=\"Laboratory\" />\r\n            </div>\r\n        </Header>,\r\n        <Main key=\"home-main\">\r\n            <NewsLetter />\r\n            <Hr />\r\n            <Experiments />\r\n        </Main>,\r\n    ]\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\r\nimport Home from './pages/home'\r\n\r\nconst App = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n)\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.')\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister()\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('wrapper'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}